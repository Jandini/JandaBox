name: Build

env:
    DOTNET_CLI_TELEMETRY_OPTOUT: 1    
    
on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
      with: 
        fetch-depth: 0    

    - name: Setup
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x

    - name: CommandBox
      working-directory: src/commandbox/src
      run: |
        cp CommandBox/CommandBox.csproj CommandBox/CommandBox.csproj.bak
        sed -i '/<Target Name="NSwag"/,/<\/Target>/d' CommandBox/CommandBox.csproj
        echo --options
        dotnet build /p:DefineConstants=options
        echo none
        dotnet build 
        mv CommandBox/CommandBox.csproj.bak CommandBox/CommandBox.csproj

    - name: ConsoleBox
      working-directory: src/consolebox/src
      run: |
        cp ConsoleBox/ConsoleBox.csproj ConsoleBox/ConsoleBox.csproj.bak
        sed -i '/<Target Name="NSwag"/,/<\/Target>/d' ConsoleBox/ConsoleBox.csproj
        echo --basic --serilog -async
        dotnet build /p:DefineConstants=basic%3Bserilog%3Basync
        echo --basic --serilog
        dotnet build /p:DefineConstants=basic%3Bserilog
        echo --basic
        dotnet build /p:DefineConstants=basic
        echo --basic --sync
        dotnet build /p:DefineConstants=basic%3Basync
        echo --serilog
        dotnet build /p:DefineConstants=serilog
        echo --serilog --async
        dotnet build /p:DefineConstants=serilog%3Basync
        echo --async
        dotnet build /p:DefineConstants=async
        echo none
        dotnet build 
        mv ConsoleBox/ConsoleBox.csproj.bak ConsoleBox/ConsoleBox.csproj

    - name: WebApiBox
      working-directory: src/webapibox/src
      run: |
        echo none
        dotnet build -nologo -c:Release 
        echo --name-override
        dotnet build -nologo -c:Release /p:DefineConstants=nameOverride
        echo --windows-service
        dotnet build -nologo -c:Release /p:DefineConstants=windowsService
        echo --exceptionMiddleware
        dotnet build -nologo -c:Release /p:DefineConstants=exceptionMiddleware
        echo --elastic-logging
        dotnet build -nologo -c:Release /p:DefineConstants=elasticLog
        echo --name-override --elastic-logging
        dotnet build -nologo -c:Release /p:DefineConstants=nameOverride%3BelasticLog
        echo --name-override --elastic-logging --exception-middleware --windows-service 
        dotnet build -nologo -c:Release /p:DefineConstants=nameOverride%3BelasticLog%3BexceptionMiddleware%3BwindowsService%3BnameOverride%3B

    - name: NuGetBox
      working-directory: src/nugetbox/src
      run: |
        echo build
        dotnet build 
        # Cannot pack due to license properties in project file

    - name: Version
      run: |  
        dotnet tool install --global GitVersion.Tool --version 6.0.4
        dotnet gitversion /output buildserver 

    - name: Update
      run: | 
        HEADER="Created with JandaBox"
        REPLACEMENT="$HEADER ${{ env.GitVersion_FullSemVer }}"
        find . -type f -name "Program.cs" -exec sed "s/$HEADER/$REPLACEMENT/g" {} +
        find . -type f -name "Program.cs" -exec sed -i "s/$HEADER/$REPLACEMENT/g" {} +
  
    - name: Pack
      run: dotnet pack JandaBox.csproj -p:Version=${{ env.GitVersion_SemVer }}
  