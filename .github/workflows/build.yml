name: Build

env:
    DOTNET_CLI_TELEMETRY_OPTOUT: 1    
    
on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:

    - uses: actions/checkout@v2
      with: 
        fetch-depth: 0    

    - name: Setup
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x

    - name: ConsoleBox
      working-directory: src/Console/src
      run: |
        echo --basic --serilog -async
        dotnet build /p:DefineConstants=basic%3Bserilog%3Basync
        echo --basic --serilog
        dotnet build /p:DefineConstants=basic%3Bserilog
        echo --basic
        dotnet build /p:DefineConstants=basic
        echo --basic --sync
        dotnet build /p:DefineConstants=basic%3Basync
        echo --serilog
        dotnet build /p:DefineConstants=serilog
        echo --serilog --async
        dotnet build /p:DefineConstants=serilog%3Basync
        echo --gitVersion
        dotnet build /p:DefineConstants=GitVersion
        echo --async
        dotnet build /p:DefineConstants=async
        echo none
        dotnet build 

    - name: WebApiBox
      working-directory: src/WebApi/src
      run: |
        echo none
        dotnet build -nologo -c:Release 
        echo --appName
        dotnet build -nologo -c:Release /p:DefineConstants=appName
        echo --openApi
        dotnet build -nologo -c:Release /p:DefineConstants=openApi
        echo --windowsService
        dotnet build -nologo -c:Release /p:DefineConstants=windowsService
        echo --exceptionMiddleware
        dotnet build -nologo -c:Release /p:DefineConstants=exceptionMiddleware
        echo --elasticLog
        dotnet build -nologo -c:Release /p:DefineConstants=elasticLog
        echo --gitVersion
        dotnet build /p:DefineConstants=GitVersion
        echo --appName --elasticLog
        dotnet build -nologo -c:Release /p:DefineConstants=appName%3BelasticLog
        echo --appName --elasticLog --exceptionMiddleware --windowsService --appName --openApi --gitVersion
        dotnet build -nologo -c:Release /p:DefineConstants=appName%3BelasticLog%3BexceptionMiddleware%3BwindowsService%3BappName%3BopenApi%3BgitVersion

    - name: LibraryBox
      working-directory: src/Library/src
      run: |
        echo build
        dotnet build 
        # Cannot pack due to license properties in project file

    - name: Update
      run: | 
        $HEADER="Created with JandaBox"
        $REPLACEMENT="$HEADER ${{ env.GitVersion_FullSemVer }}"
        find . -type f -name "Program.cs" -exec sed "s/$HEADER/$REPLACEMENT/g" {} +
        find . -type f -name "Program.cs" -exec sed -i "s/$HEADER/$REPLACEMENT/g" {} +
  
    - name: Pack
      run: nuget pack .nuspec -NoDefaultExcludes -OutputDirectory bin -Version ${{ env.GitVersion_SemVer }}
  
 
